---
import { Image } from 'astro:assets';

const {
	restaurant,
	website,
	address,
	item,
	stars,
	imagePrimary,
	imageLength,
	imagePackage,
	price,
	content,
	closed
} = Astro.props;

let gold_stars = '';
for (let i = 0; i < stars; i++) {
	gold_stars += '★';
}
let black_stars = '';
for (let i = 0; i < 5 - stars; i++) {
	black_stars += '☆';
}

const formatter = new Intl.NumberFormat('en-US', {
	style: 'currency',
	currency: 'USD',
	minimumFractionDigits: 2
});

const priceOutput = formatter.format(price);
---

<div class="card-wrap" data-closed={closed}>
	<div class="card">
		<header class="header">
			<h2><a href={website}>{restaurant}</a></h2>
			<div class="item-name">{item}, {priceOutput}</div>
			<address>{address}</address>
		</header>

		<div class="rating">
			<span class="gold-stars" title="{stars} / 5 Stars">{gold_stars}</span>
			<span class="black-stars" title="{stars} / 5 Stars">{black_stars}</span>
		</div>

		<div class="images state-1">
			<Image
				alt="Photo of burrito's insides"
				loading="lazy"
				src={imagePrimary}
				width="672"
				height="448"
			/>
			<Image
				alt="Photo of the burrito's length"
				loading="lazy"
				src={imageLength}
				width="672"
				height="448"
			/>
			<Image
				alt="Photo of burrito's packaging"
				loading="lazy"
				src={imagePackage}
				width="672"
				height="448"
			/>
		</div>

		<div class="content">
			{(<slot />)}
		</div>
	</div>
</div>

<style lang="scss">
	:global(body[data-format='grid']) {
		.card-wrap {
			&[data-closed] {
				opacity: 0.5;
				position: relative;
				overflow: clip;
				&::after {
					top: 10%;
					left: 10%;
					position: absolute;
					background: oklch(61% 59% 28deg);
					content: 'Closed';
					width: 80%;
					aspect-ratio: 1 / 1;
					display: grid;
					place-content: center;
					color: white;
					clip-path: polygon(
						20% 0%,
						0% 20%,
						30% 50%,
						0% 80%,
						20% 100%,
						50% 70%,
						80% 100%,
						100% 80%,
						70% 50%,
						100% 20%,
						80% 0%,
						50% 30%
					);
				}
			}
		}
		.card {
			background: white;
			border: 3px solid black;
			display: flex;
			flex-direction: column;
			border-radius: 20px 50px;
			overflow: hidden;

			img {
				max-width: 100%;
				height: auto;
				display: block;
			}

			.header {
				background-color: #eee;
				padding: 2rem;
				address {
					font-weight: 300;
					font-size: var(--font-size-sm);
					font-style: normal;
				}
			}
		}
	}

	:global(body[data-format='table']) {
		.card-wrap {
			display: contents;
			&[data-closed] > * {
				text-decoration: line-through;
			}
		}
		.card {
			display: grid;
			grid-template-columns: 170px 1fr 1fr 1fr;
			gap: 1rem;
			align-items: center;
			background: white;

			&:hover {
				background: rgba(white, 0.9);
			}

			img {
				max-width: 100px;
			}
			.content,
			.images {
				display: none;
			}

			.rating {
				padding: 0 0.5rem 0 0.5rem;
				background: none;
				text-align: right;
			}
		}

		.rating {
			order: -1;
		}
		.header {
			display: contents !important;

			> * {
				font-size: 1rem;
			}

			.item-name {
				margin: 0;
			}

			h2 {
				font-size: var(--font-size-lg);
				padding: 0.7rem;
			}
			address {
				font-size: 0.8rem;
				font-style: normal;
				font-weight: 300;
			}
		}
	}

	.rating {
		background: black;
		padding: 1rem 2rem;
		display: flex;
		align-items: center;
		font-size: var(--font-size-lg);
	}
	.gold-stars {
		color: #f3b611;
	}
	.black-stars {
		color: #c89200;
		opacity: 0.75;
	}

	.images {
		background: white;
		position: relative;
		padding: 1rem;
		display: grid;
		gap: 0.5rem;
		grid-template:
			'top top'
			'b-l b-r';

		img:nth-child(1) {
			grid-area: top;
			aspect-ratio: unset;
		}
		img:nth-child(2) {
			grid-area: b-l;
			aspect-ratio: 16 / 9;
			object-fit: cover;
		}
		img:nth-child(3) {
			grid-area: b-r;
			aspect-ratio: 16 / 9;
			object-fit: cover;
		}

		&.state-2 {
			img:nth-child(1) {
				grid-area: b-r;
				aspect-ratio: 16 / 9;
				object-fit: cover;
			}
			img:nth-child(2) {
				grid-area: top;
				aspect-ratio: unset;
			}
			img:nth-child(3) {
				grid-area: b-l;
				aspect-ratio: 16 / 9;
				object-fit: cover;
			}
		}
		&.state-3 {
			img:nth-child(1) {
				grid-area: b-l;
				aspect-ratio: 16 / 9;
				object-fit: cover;
			}
			img:nth-child(2) {
				grid-area: b-r;
				aspect-ratio: 16 / 9;
				object-fit: cover;
			}
			img:nth-child(3) {
				grid-area: top;
				aspect-ratio: unset;
			}
		}
	}
	.item-name {
		color: #bd4f00;
		font-weight: 600;
		font-size: var(--font-size-lg);
		margin: 0 0 1rem 0;
	}

	.content {
		background: white;
		padding: 0 1.5rem 1rem;
		flex: 1;
	}

	.card-wrap {
		container: card-wrap / inline-size;
		height: 100%;
	}

	@container card-wrap (min-width: 700px) {
		:global(body[data-format='grid']) {
			.card.card {
				display: grid;
				grid-template-columns: 1fr 2fr;
				grid-template-rows: min-content min-content 1fr;
				border-top-right-radius: 0;
				height: 100%;
			}
			.header.header {
				grid-column: 1 / 2;
				grid-row: 1 / 2;
				border-top: 1rem solid white;
				border-left: 1rem solid white;
				border-top-left-radius: 2rem;
			}
			.rating.rating {
				grid-column: 1 / -1;
				grid-row: 2 / 3;
				box-shadow: 0 0 2rem hsl(0 0% 0% / 0.33);
				position: relative;
				z-index: 1;
			}
			.images.images {
				grid-column: 2 / 3;
				grid-row: 1 / 2;
				gap: 1rem;
			}
			.content.content {
				grid-column: 1 / -1;
				grid-row: 3 / 4;
				padding: 1.5rem 3rem 1.5rem 3rem;
			}
		}
	}
</style>
